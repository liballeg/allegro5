# Keyboard routines

These functions are declared in the main Allegro header file:

~~~~c
 #include <allegro5/allegro.h>
~~~~

## API: A5O_KEYBOARD_STATE

This is a structure that is used to hold a "snapshot" of a keyboard's
state at a particular instant.  It contains the following publically
readable fields:

* display - points to the display that had keyboard focus at the time
the state was saved.  If no display was focused, this points
to NULL.

You cannot read the state of keys directly.  Use the function
[al_key_down].

## Key codes

The constant A5O_KEY_MAX is always one higher than
the highest key code. So if you want to use the key code as array index
you can do something like this:

~~~~c
bool pressed_keys[A5O_KEY_MAX];
//...
pressed_keys[key_code] = true;
~~~~

These are the list of key codes used by Allegro, which are returned in
the event.keyboard.keycode field of the A5O_KEY_DOWN and
A5O_KEY_UP events and which you can pass to [al_key_down]:

    A5O_KEY_A ... A5O_KEY_Z
    A5O_KEY_0 ... A5O_KEY_9
    A5O_KEY_PAD_0 ... A5O_KEY_PAD_9
    A5O_KEY_F1 ... A5O_KEY_F12
    A5O_KEY_ESCAPE
    A5O_KEY_TILDE
    A5O_KEY_MINUS
    A5O_KEY_EQUALS
    A5O_KEY_BACKSPACE
    A5O_KEY_TAB
    A5O_KEY_OPENBRACE
    A5O_KEY_CLOSEBRACE
    A5O_KEY_ENTER
    A5O_KEY_SEMICOLON
    A5O_KEY_QUOTE
    A5O_KEY_BACKSLASH
    A5O_KEY_BACKSLASH2
    A5O_KEY_COMMA
    A5O_KEY_FULLSTOP
    A5O_KEY_SLASH
    A5O_KEY_SPACE
    A5O_KEY_INSERT
    A5O_KEY_DELETE
    A5O_KEY_HOME
    A5O_KEY_END
    A5O_KEY_PGUP
    A5O_KEY_PGDN
    A5O_KEY_LEFT
    A5O_KEY_RIGHT
    A5O_KEY_UP
    A5O_KEY_DOWN
    A5O_KEY_PAD_SLASH
    A5O_KEY_PAD_ASTERISK
    A5O_KEY_PAD_MINUS
    A5O_KEY_PAD_PLUS
    A5O_KEY_PAD_DELETE
    A5O_KEY_PAD_ENTER
    A5O_KEY_PRINTSCREEN
    A5O_KEY_PAUSE
    A5O_KEY_ABNT_C1
    A5O_KEY_YEN
    A5O_KEY_KANA
    A5O_KEY_CONVERT
    A5O_KEY_NOCONVERT
    A5O_KEY_AT
    A5O_KEY_CIRCUMFLEX
    A5O_KEY_COLON2
    A5O_KEY_KANJI
    A5O_KEY_LSHIFT
    A5O_KEY_RSHIFT
    A5O_KEY_LCTRL
    A5O_KEY_RCTRL
    A5O_KEY_ALT
    A5O_KEY_ALTGR
    A5O_KEY_LWIN
    A5O_KEY_RWIN
    A5O_KEY_MENU
    A5O_KEY_SCROLLLOCK
    A5O_KEY_NUMLOCK
    A5O_KEY_CAPSLOCK
    A5O_KEY_PAD_EQUALS
    A5O_KEY_BACKQUOTE
    A5O_KEY_SEMICOLON2
    A5O_KEY_COMMAND

    /* Since: 5.1.1 */
    /* Android only for now */
    A5O_KEY_BACK

    /* Since: 5.1.2 */
    /* Android only for now */
    A5O_KEY_VOLUME_UP
    A5O_KEY_VOLUME_DOWN

    /* Since: 5.1.6 */
    /* Android only for now */
    A5O_KEY_SEARCH
    A5O_KEY_DPAD_CENTER
    A5O_KEY_BUTTON_X
    A5O_KEY_BUTTON_Y
    A5O_KEY_DPAD_UP
    A5O_KEY_DPAD_DOWN
    A5O_KEY_DPAD_LEFT
    A5O_KEY_DPAD_RIGHT
    A5O_KEY_SELECT
    A5O_KEY_START
    A5O_KEY_L1
    A5O_KEY_R1

## Keyboard modifier flags

    A5O_KEYMOD_SHIFT
    A5O_KEYMOD_CTRL
    A5O_KEYMOD_ALT
    A5O_KEYMOD_LWIN
    A5O_KEYMOD_RWIN
    A5O_KEYMOD_MENU
    A5O_KEYMOD_ALTGR
    A5O_KEYMOD_COMMAND
    A5O_KEYMOD_SCROLLLOCK
    A5O_KEYMOD_NUMLOCK
    A5O_KEYMOD_CAPSLOCK
    A5O_KEYMOD_INALTSEQ
    A5O_KEYMOD_ACCENT1
    A5O_KEYMOD_ACCENT2
    A5O_KEYMOD_ACCENT3
    A5O_KEYMOD_ACCENT4

The event field 'keyboard.modifiers' is a bitfield composed of these constants.
These indicate the modifier keys which were pressed at the time a character was
typed.

## API: al_install_keyboard

Install a keyboard driver. Returns true if successful. If a driver
was already installed, nothing happens and true is returned.

See also: [al_uninstall_keyboard], [al_is_keyboard_installed]

## API: al_is_keyboard_installed

Returns true if [al_install_keyboard] was called successfully.

## API: al_uninstall_keyboard

Uninstalls the active keyboard driver, if any.  This will
automatically unregister the keyboard event source with any event
queues.

This function is automatically called when Allegro is shut down.

See also: [al_install_keyboard]

## API: al_get_keyboard_state

Save the state of the keyboard specified at the time the function
is called into the structure pointed to by *ret_state*.

See also: [al_key_down], [al_clear_keyboard_state], [A5O_KEYBOARD_STATE]

## API: al_clear_keyboard_state

Clear the state of the keyboard, emitting [A5O_EVENT_KEY_UP] for
each currently pressed key.  The given display is regarded as the one
which had the keyboard focus when the event occurred.  In case display
is NULL no event is emitted.  For most keyboard drivers Allegro
maintains its own state of the keyboard, which might get out of sync
with the real one.  This function is intended to remedy such situation
by resetting Allegro's keyboard state to a known default (no key
pressed).  This is particularly useful in response to
[A5O_EVENT_DISPLAY_SWITCH_OUT] events.

See also: [al_get_keyboard_state], [A5O_KEYBOARD_STATE]

Since: 5.2.3

> *[Unstable API]:* This is a new feature and the exact semantics are still
being decided upon.

## API: al_key_down

Return true if the key specified was held down in the state
specified.

See also: [A5O_KEYBOARD_STATE]

## API: al_keycode_to_name

Converts the given keycode to a description of the key.

## API: al_can_set_keyboard_leds

Returns true if setting the keyboard LED indicators is available.

Since: 5.2.9

See also: [al_set_keyboard_leds]

## API: al_set_keyboard_leds

Overrides the state of the keyboard LED indicators. Set `leds` to a
combination of the keyboard modifier flags to enable the corresponding LED
indicators (`A5O_KEYMOD_NUMLOCK`, `A5O_KEYMOD_CAPSLOCK` and
`A5O_KEYMOD_SCROLLLOCK` are supported) or to -1 to return to default
behavior. False is returned if the current keyboard driver cannot set LED
indicators.

See also: [al_can_set_keyboard_leds]

## API: al_get_keyboard_event_source

Retrieve the keyboard event source. All [keyboard events][A5O_EVENT_KEY_DOWN]
are generated by this event source.

Returns NULL if the keyboard subsystem was not installed.
