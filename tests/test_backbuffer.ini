[bitmaps]
allegro=../examples/data/allegro.pcx
mysha=../examples/data/mysha.pcx

# Test backbuffer to backbuffer.

# Self-blitting support is not scheduled for 5.0.0.

#[test bb2bb]
#op0=al_draw_bitmap(allegro, 0, 0, 0)
#op1=al_draw_bitmap_region(target, 0, 0, 320, 200, 100, 100, flags)
#flags=0
#hash=BROKEN

#[test bb2bb hflip]
#extend=test bb2bb
#flags=ALLEGRO_FLIP_HORIZONTAL
#hash=BROKEN

#[test bb2bb vflip]
#extend=test bb2bb
#flags=ALLEGRO_FLIP_VERTICAL
#hash=BROKEN

#[test bb2bb vhflip]
#extend=test bb2bb
#flags=ALLEGRO_FLIP_VERTICAL|ALLEGRO_FLIP_HORIZONTAL
#hash=BROKEN


# Test drawing backbuffer to non-backbuffer bitmaps.

[test bbsrc]
op0=al_draw_bitmap(mysha, 0, 0, 0)
op1=bmp = al_create_bitmap(400, 300)
op2=al_set_target_bitmap(bmp)
op3=al_clear_to_color(yellow)
op4=al_draw_bitmap(target, 0, 0, flags)
op5=al_set_target_bitmap(target)
op6=al_draw_bitmap(bmp, 200, 150, 0)
flags=0
hash=a22aae19

[test bbsrc translate]
extend=test bbsrc
op4=al_draw_bitmap(target, 160, 100, flags)
hash=9cf6fa5d

[test bbsrc outside]
extend=test bbsrc
op4=al_draw_bitmap(target, -160, -100, flags)
hash=882edf64

# In Allegro 5.0.0, tinting as well as blending is ignored when the
# source bitmap is the screen (and locking is not used).

[test bbsrc tint]
skip_on_xvfb=true
extend=test bbsrc
op4=al_draw_tinted_bitmap(target, #008000, 0, 0, flags)
hash=a47a96d4
hash_hw=a22aae19

# Support for transforming the back-buffer is not on the feature list
# for 5.0.0.

#[test bbsrc hflip]
#extend=test bbsrc
#flags=ALLEGRO_FLIP_HORIZONTAL

#[test bbsrc vflip]
#extend=test bbsrc
#flags=ALLEGRO_FLIP_VERTICAL

#[test bbsrc vhflip]
#extend=test bbsrc
#flags=ALLEGRO_FLIP_HORIZONTAL|ALLEGRO_FLIP_VERTICAL


#[test bbsrc scale]
#extend=test bbsrc
#op4=al_draw_scaled_bitmap(target, 0, 0, 320, 200, 0, 0, 640, 480, flags)

#[test bbsrc scale hflip]
#extend=test bbsrc scale
#flags=ALLEGRO_FLIP_HORIZONTAL

#[test bbsrc scale vflip]
#extend=test bbsrc scale
#flags=ALLEGRO_FLIP_VERTICAL

#[test bbsrc scale vhflip]
#extend=test bbsrc scale
#flags=ALLEGRO_FLIP_VERTICAL|ALLEGRO_FLIP_HORIZONTAL


#[test bbsrc rotate]
#extend=test bbsrc
#op4=al_draw_rotated_bitmap(target, 0, 0, 0, 0, 0.2, flags)

#[test bbsrc rotate hflip]
#extend=test bbsrc rotate
#flags=ALLEGRO_FLIP_HORIZONTAL

#[test bbsrc rotate vflip]
#extend=test bbsrc rotate
#flags=ALLEGRO_FLIP_VERTICAL

#[test bbsrc rotate vhflip]
#extend=test bbsrc rotate
#flags=ALLEGRO_FLIP_HORIZONTAL|ALLEGRO_FLIP_VERTICAL
