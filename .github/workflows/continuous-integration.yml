name: Tests
on: [push, pull_request]
jobs:
    windows_test:
        name: Windows tests
        runs-on: windows-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 1
            - uses: nuget/setup-nuget@v1
            - name: Setup
              run: |
                  vcpkg install allegro5
                  mkdir build
                  mkdir deps
                  mkdir deps\include
                  mkdir deps\lib
                  nuget install AllegroDeps -Version 1.5.0 -OutputDirectory deps -ExcludeVersion
                  move deps\AllegroDeps\build\native\include\* deps\include -force
                  move deps\AllegroDeps\build\native\v140\win32\deps\lib\* deps\lib -force
              shell: powershell
            - name: Configure
              run: |
                  cd build
                  cmake .. -DWANT_ACODEC_DYNAMIC_LOAD=off -DFLAC_STATIC=on
            - name: Build
              run: |
                  cd build
                  cmake --build . --config Debug
    osx_test:
        name: OSX tests
        runs-on: macos-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 1
            - name: Setup
              run: |
                  brew update && brew install opusfile libvorbis freetype flac physfs dumb theora enet
                  mkdir build
            - name: Configure
              run: |
                  cd build
                  cmake .. -DWANT_SHADERS_GL=$WANT_SHADERS_GL -G Xcode
            - name: Build
              run: |
                  cd build
                  xcodebuild
    ubuntu_test:
        name: Ubuntu tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 1
            - name: Setup
              run: |
                  sudo apt-get update
                  sudo apt-get install -y xvfb libvorbis-dev libtheora-dev libwebp-dev libphysfs-dev libopusfile-dev libdumb1-dev libflac-dev libpulse-dev libgtk-3-dev pandoc libcurl4-nss-dev libenet-dev pulseaudio libasound2-dev libopenal-dev libgl1-mesa-dev libglu-dev;
                  mkdir build
                  cd build
                  . ../tests/grab_bitmap_suites.sh
            - name: Configure
              run: |
                  cd build
                  cmake .. -DCMAKE_BUILD_TYPE=Debug -DWANT_SHADERS_GL=on -DWANT_CURL_EXAMPLE=on -DWANT_PYTHON_WRAPPER=1
            - name: Build
              run: |
                  cd build
                  make -j2
            - name: Run test_driver
              run: |
                  cd build
                  find ../tests -name '*.ini' | grep -v 'compressed' | xargs xvfb-run tests/test_driver --save_on_failure --xvfb | tee /tmp/test_out || true
                  mkdir -p test_outputs
                  mv *.png test_outputs
                  grep -q 'failed tests: 0' /tmp/test_out
            - name: Upload artifacts
              if: failure()
              uses: actions/upload-artifact@v1
              with:
                  name: bitmaps
                  path: build/test_outputs
            - name: Run install_test
              run: |
                  cd build
                  sudo make install
                  sudo ldconfig
                  gcc ../misc/install_test.c -o install_test $(pkg-config --cflags --libs allegro_image-debug-5 allegro_ttf-debug-5 allegro_acodec-debug-5 allegro_dialog-debug-5 allegro_primitives-debug-5 allegro_video-debug-5)
                  pulseaudio -D
                  xvfb-run ./install_test
            - name: Test Python wrapper
              run: |
                  cd build
                  python python/allegro.py
